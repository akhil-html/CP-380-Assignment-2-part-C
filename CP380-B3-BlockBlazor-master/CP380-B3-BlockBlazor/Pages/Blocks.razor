@page "/blocks"
<!-- TODO: Add using and inject statements -->
@using CP380_B1_BlockList.Models
@using CP380_B3_BlockBlazor.Data
@inject BlockService BlockService

<h3>Blocks</h3>

@if (blocklist == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card-columns">        
        <!-- TODO: Add cards for each block in the block list

                   Each card should show:
                        - the position in the chain (starting at 0)
                        - the hash
                        - the nonce
                        - the previous hash
          -->        
          @{
            var position=1;
          }
        @foreach (var i in blocklist)
        {
            <div class="card">            
                <div class="card-body">Position: @position
                  <p class="card-text">Hash: @i.Hash</p>
                  <p class="card-text">Nonce: @i.Nonce</p>
                  <p class="card-text">Previous Hash: @i.PreviousHash</p>
                </div>
            </div>
            ++position;
        }
    </div>
}

@code {
    IEnumerable<Block> blocklist;

    protected override async Task OnInitializedAsync()
    {
        // TODO: fetch blocks from the BlockService        
        blocklist = await BlockService.ListBlocks();
    }
}
